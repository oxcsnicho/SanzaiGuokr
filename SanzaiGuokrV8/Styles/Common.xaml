<!--
Copyright (c) Microsoft Corporation.  All rights reserved.
-->

<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:SanzaiGuokr.Converters"
    xmlns:toolkitPrimitives="clr-namespace:Microsoft.Phone.Controls.Primitives;assembly=Microsoft.Phone.Controls.Toolkit"
  xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
    xmlns:vm="clr-namespace:SanzaiGuokr.ViewModel"
    >
	<converters:IntConverter x:Key="IntConverter"/>
	<Style x:Key="ListPickerItemStyleCenter" TargetType="toolkit:ListPickerItem">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="Padding" Value="8 10"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="toolkit:ListPickerItem">
					<Grid Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground)" Storyboard.TargetName="ContentContainer">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DefaultForeground}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneAccentBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="TextBoxStyle1" TargetType="TextBox">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="MainBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="MainBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="MainBorder"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Margin="{StaticResource PhoneTouchTargetOverhang}">
                            <ContentControl x:Name="ContentElement"
                                                    BorderThickness="0"
                                                    HorizontalContentAlignment="Stretch"
                                                    Margin="{StaticResource PhoneTextBoxInnerMargin}"
                                                    Padding="{TemplateBinding Padding}"
                                                    Foreground="{TemplateBinding Foreground}"
                                                    VerticalContentAlignment="Stretch"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="ArticleItemTemplate">
        <StackPanel Margin="0,0,0,18" Width="444" HorizontalAlignment="Left">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Tap">
                    <i:InvokeCommandAction Command="{Binding ReadThisArticle, Mode=OneWay}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TextBlock TextWrapping="Wrap"
                Text="{Binding title}"
                Margin="0"
                FontSize="{StaticResource TextSizeTitle}"
                MaxHeight="{StaticResource TitleHeight}">
                <TextBlock.Foreground>
                    <SolidColorBrush Color="{StaticResource DefaultBlue}"/>
                </TextBlock.Foreground>
            </TextBlock>
            <TextBlock TextWrapping="Wrap"
                Text="{Binding Abstract}"
                Foreground="{StaticResource DefaultForeground}"
                Margin="0,6,0,0"
                FontSize="{StaticResource TextSizeText}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ChannelItemTemplate">
        <Grid Margin="0,0,0,12">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="144"/>
                <ColumnDefinition Width="0.715*"/>
            </Grid.ColumnDefinitions>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Tap">
                    <i:InvokeCommandAction Command="{Binding ViewChannel, Mode=OneWay}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Image VerticalAlignment="Top" Source="{Binding pic_large}" Margin="0,0,8.681,0"/>
            <TextBlock Margin="0,0,1,0" TextWrapping="Wrap" Text="{Binding name}" d:LayoutOverrides="Width, Height" Grid.ColumnSpan="2" Grid.Column="1" FontSize="21.333" FontWeight="Bold">
                <TextBlock.Foreground>
                    <SolidColorBrush Color="{StaticResource DefaultBlue}"/>
                </TextBlock.Foreground>
            </TextBlock>
            <TextBlock Margin="0,36,2,0" TextWrapping="Wrap" Text="{Binding introduction}" d:LayoutOverrides="Width, Height" Grid.ColumnSpan="2" Grid.Column="1" Foreground="{StaticResource DefaultForeground}"/>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="LongListSelectorFooter">
        <Grid Margin="12,0,0,24">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Margin="0" TextWrapping="Wrap" Text="加载中" d:LayoutOverrides="Height" HorizontalAlignment="Left" Foreground="{StaticResource DefaultGreenBrush}"/>
            <ProgressBar Margin="12,0" Grid.Column="1" VerticalAlignment="Center" Height="4" IsIndeterminate="True" MinWidth="400"/>
        </Grid>
    </DataTemplate>
    <Style x:Key="InvertedBottomButtonStyle" TargetType="Button">
        <Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
        <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
        <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}"/>
        <Setter Property="Padding" Value="10,3,10,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource DefaultBlue}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonBackground" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource DefaultBackgroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="ContentContainer" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource DefaultBlue}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonBackground" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource DefaultBackgroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="ContentContainer" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource DefaultBackgroundColor}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonBackground" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource DefaultGreen}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="ContentContainer" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource DefaultBackgroundColor}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonBackground" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource DefaultSubtle}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="ContentContainer" d:IsOptimized="True"/>
                                        <!--
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    -->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ButtonBackground" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Margin="{StaticResource PhoneTextBoxInnerMargin}">
                            <Border.Background>
                                <SolidColorBrush Color="{Binding Background}"/>
                            </Border.Background>
                            <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentControl.Foreground>
                                    <SolidColorBrush Color="{StaticResource DefaultBlue}"/>
                                </ContentControl.Foreground>
                            </ContentControl>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="PromptSearchFooterTamplate">
        <Grid Margin="12,0,0,24">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Margin="0" TextWrapping="Wrap" Text="请在下方框内搜索" d:LayoutOverrides="Height" HorizontalAlignment="Left">
                <TextBlock.Foreground>
                    <SolidColorBrush Color="{StaticResource DefaultBlue}"/>
                </TextBlock.Foreground>
            </TextBlock>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="RefreshFooterTamplate">
        <Grid Margin="12,0,12,12" DataContext="{Binding Source={StaticResource Locator}}">
            <Button x:Name="refreshButton" Style="{StaticResource InvertedBottomButtonStyle}"
                        FontSize="18.667"
                        VerticalAlignment="Top"
                        Background="{x:Null}"
                        Content="刷新" Grid.Row="1" 
            Command="{Binding MainStatic.latest_post_list.RefreshList, Mode=OneWay}"
                        >
                <Button.BorderBrush>
                    <SolidColorBrush Color="{StaticResource DefaultGreen}"/>
                </Button.BorderBrush>
                <Button.Foreground>
                    <SolidColorBrush Color="{StaticResource DefaultBlue}"/>
                </Button.Foreground>
            </Button>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="EndedFooterTamplate">
        <Grid Margin="12,0,0,24">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Margin="0" TextWrapping="Wrap" Text="下面..木有了～" d:LayoutOverrides="Height" HorizontalAlignment="Left">
                <TextBlock.Foreground>
                    <SolidColorBrush Color="{StaticResource DefaultGreen}"/>
                </TextBlock.Foreground>
            </TextBlock>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="UnderConstructionFooterTamplate">
        <Grid Margin="12,0,0,24">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Margin="0" TextWrapping="Wrap" Text="果壳后台改版拆迁，灾后重建中。。" d:LayoutOverrides="Height" HorizontalAlignment="Left">
                <TextBlock.Foreground>
                    <SolidColorBrush Color="{StaticResource DefaultGreen}"/>
                </TextBlock.Foreground>
            </TextBlock>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="FailedFooterTamplate">
        <Grid Margin="12,0,0,24">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Margin="0" TextWrapping="Wrap" Text="网络挂了，请稍候再试 (下拉刷新)" d:LayoutOverrides="Height" HorizontalAlignment="Left">
                <TextBlock.Foreground>
                    <SolidColorBrush Color="{StaticResource DefaultGreen}"/>
                </TextBlock.Foreground>
            </TextBlock>
        </Grid>
    </DataTemplate>
    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converters:ConditionalAlertColorConverter x:Key="conditionalAlertColorConverter"/>
    <converters:IdenticalConverter x:Key="IdenticalConverter"/>
    <Style TargetType="ScrollViewer">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ScrollStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.5"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Scrolling">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="VerticalScrollBar" 
                                                Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="HorizontalScrollBar" 
                                                Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NotScrolling"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="VerticalCompression">
                                <VisualState x:Name="NoVerticalCompression"/>
                                <VisualState x:Name="CompressionTop"/>
                                <VisualState x:Name="CompressionBottom"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HorizontalCompression">
                                <VisualState x:Name="NoHorizontalCompression"/>
                                <VisualState x:Name="CompressionLeft"/>
                                <VisualState x:Name="CompressionRight"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Margin="{TemplateBinding Padding}">
                            <ScrollContentPresenter x:Name="ScrollContentPresenter" Content="{TemplateBinding Content}" 
                                    ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <ScrollBar x:Name="VerticalScrollBar" IsHitTestVisible="False" Height="Auto" Width="5" 
                                    HorizontalAlignment="Right" VerticalAlignment="Stretch" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                    IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{TemplateBinding VerticalOffset}" 
                                    Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" />
                            <ScrollBar x:Name="HorizontalScrollBar" IsHitTestVisible="False" Width="Auto" Height="5" 
                                    HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                    IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{TemplateBinding HorizontalOffset}" 
                                    Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ImageSource x:Key="SplashImageBrush">/SplashScreenImage.jpg</ImageSource>
    <Style x:Key="BottomButtonStyle" TargetType="Button">
        <Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
        <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
        <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}"/>
        <Setter Property="Padding" Value="10,3,10,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource DefaultBackgroundColor}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonBackground" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource DefaultGreen}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="ContentContainer" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource DefaultBlue}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonBackground" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource DefaultBackgroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="ContentContainer" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource DefaultBlue}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonBackground" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource DefaultBackgroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="ContentContainer" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource DefaultBackgroundColor}" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ButtonBackground" d:IsOptimized="True"/>
                                        <ColorAnimation Duration="0" To="{StaticResource DefaultSubtle}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="ContentContainer" d:IsOptimized="True"/>
                                        <!--
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    -->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ButtonBackground" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Margin="{StaticResource PhoneTextBoxInnerMargin}">
                            <Border.Background>
                                <SolidColorBrush Color="{Binding Background}"/>
                            </Border.Background>
                            <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentControl.Foreground>
                                    <SolidColorBrush Color="{StaticResource DefaultBlue}"/>
                                </ContentControl.Foreground>
                            </ContentControl>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

        <!--
        <Setter Property="Background" Value="{StaticResource PhoneBackgroundBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="phone:LongListSelector">
                                    <toolkitPrimitives:TemplatedListBox x:Name="TemplatedListBox" 
                            Background="{TemplateBinding Background}" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                                        <toolkitPrimitives:TemplatedListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem">
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            </Style>
                                        </toolkitPrimitives:TemplatedListBox.ItemContainerStyle>
                                    </toolkitPrimitives:TemplatedListBox>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
-->
    <DataTemplate x:Key="BookmarkItemTemplate">
        <StackPanel Margin="0,0,0,18" Width="444" HorizontalAlignment="Left">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Tap">
                    <i:InvokeCommandAction Command="{Binding ReadThisArticle, Mode=OneWay}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TextBlock TextWrapping="Wrap"
                Text="{Binding title}"
                Margin="0"
                FontSize="{StaticResource TextSizeTitle}"
                MaxHeight="{StaticResource TitleHeight}"
                Foreground="{Binding IsBookmarked, ConverterParameter={StaticResource DefaultBlueBrush}, Converter={StaticResource conditionalAlertColorConverter}}"/>
        </StackPanel>
    </DataTemplate>
    <Style x:Key="PhoneButtonBase" TargetType="ButtonBase">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
        <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
        <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}"/>
        <Setter Property="Padding" Value="10,5,10,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneButtonBasePressedForegroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneAccentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="{StaticResource PhoneTouchTargetOverhang}">
                            <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PhoneRadioButtonCheckBoxBase" BasedOn="{StaticResource PhoneButtonBase}" TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource PhoneRadioCheckBoxBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PhoneRadioCheckBoxBorderBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}"/>
        <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilyNormal}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
    </Style>
    <Style x:Key="BookmarkCheckboxStyle" BasedOn="{StaticResource PhoneRadioButtonCheckBoxBase}" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="Transparent" HorizontalAlignment="Left">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background)" Storyboard.TargetName="BoaderBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DefaultBlueBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground)" Storyboard.TargetName="ContentContainer">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DefaultBackground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground)" Storyboard.TargetName="ContentContainer">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DefaultBlueBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BoaderBackground" BorderThickness="3" Margin="1,2">
                            <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{StaticResource DefaultGreenBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" FontSize="18.667" Padding="10,3,10,5"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="LatestArticleTemplate">
        <StackPanel Margin="0,0,0,18" Width="432" HorizontalAlignment="Left">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Tap">
                    <i:InvokeCommandAction Command="{Binding ReadThisArticle, Mode=OneWay}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TextBlock TextWrapping="Wrap"
                Text="{Binding title}"
                Margin="0"
                FontSize="{StaticResource TextSizeTitle}"
                MaxHeight="{StaticResource TitleHeight}">
                <TextBlock.Foreground>
                    <SolidColorBrush Color="{StaticResource DefaultBlue}"/>
                </TextBlock.Foreground>
            </TextBlock>
            <TextBlock TextWrapping="Wrap"
                Text="{Binding SubTitle, Mode=OneWay}"
                Margin="0,6,0,0"
                FontSize="{StaticResource TextSizeSubTitle}"
                MaxHeight="{StaticResource TitleHeight}">
                <TextBlock.Foreground>
                    <SolidColorBrush Color="{StaticResource DefaultGreen}"/>
                </TextBlock.Foreground>
            </TextBlock>
            <TextBlock TextWrapping="Wrap"
                Text="{Binding Abstract}"
                Foreground="{StaticResource DefaultForeground}"
                Margin="0,6,0,0"
                FontSize="{StaticResource TextSizeText}"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="SearchArticleItemTemplate">
    	<StackPanel Margin="0,0,0,18" Width="432" HorizontalAlignment="Left">
    		<i:Interaction.Triggers>
    			<i:EventTrigger EventName="Tap">
    				<i:InvokeCommandAction Command="{Binding ReadThisArticle, Mode=OneWay}"/>
    			</i:EventTrigger>
    		</i:Interaction.Triggers>
    		<TextBlock TextWrapping="Wrap"
    			Text="{Binding title}"
    			Margin="0"
    			FontSize="{StaticResource TextSizeTitle}"
    			MaxHeight="{StaticResource TitleHeight}">
    			<TextBlock.Foreground>
    				<SolidColorBrush Color="{StaticResource DefaultBlue}"/>
    			</TextBlock.Foreground>
    		</TextBlock>
    		<TextBlock TextWrapping="Wrap"
    			Text="{Binding SubTitleTime, Mode=OneWay}"
    			Margin="0,6,0,0"
    			FontSize="{StaticResource TextSizeSubTitle}"
    			MaxHeight="{StaticResource TitleHeight}">
    			<TextBlock.Foreground>
    				<SolidColorBrush Color="{StaticResource DefaultGreen}"/>
    			</TextBlock.Foreground>
    		</TextBlock>
    		<TextBlock TextWrapping="Wrap"
    			Text="{Binding Abstract}"
    			Foreground="{StaticResource DefaultForeground}"
    			Margin="0,6,0,0"
    			FontSize="{StaticResource TextSizeText}"/>
    	</StackPanel>
    </DataTemplate>
</ResourceDictionary>

  